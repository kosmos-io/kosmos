// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kosmos.io/kosmos/pkg/apis/kosmos/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PromotePolicyLister helps list PromotePolicies.
// All objects returned here must be treated as read-only.
type PromotePolicyLister interface {
	// List lists all PromotePolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PromotePolicy, err error)
	// PromotePolicies returns an object that can list and get PromotePolicies.
	PromotePolicies(namespace string) PromotePolicyNamespaceLister
	PromotePolicyListerExpansion
}

// promotePolicyLister implements the PromotePolicyLister interface.
type promotePolicyLister struct {
	indexer cache.Indexer
}

// NewPromotePolicyLister returns a new PromotePolicyLister.
func NewPromotePolicyLister(indexer cache.Indexer) PromotePolicyLister {
	return &promotePolicyLister{indexer: indexer}
}

// List lists all PromotePolicies in the indexer.
func (s *promotePolicyLister) List(selector labels.Selector) (ret []*v1alpha1.PromotePolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PromotePolicy))
	})
	return ret, err
}

// PromotePolicies returns an object that can list and get PromotePolicies.
func (s *promotePolicyLister) PromotePolicies(namespace string) PromotePolicyNamespaceLister {
	return promotePolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PromotePolicyNamespaceLister helps list and get PromotePolicies.
// All objects returned here must be treated as read-only.
type PromotePolicyNamespaceLister interface {
	// List lists all PromotePolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PromotePolicy, err error)
	// Get retrieves the PromotePolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PromotePolicy, error)
	PromotePolicyNamespaceListerExpansion
}

// promotePolicyNamespaceLister implements the PromotePolicyNamespaceLister
// interface.
type promotePolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PromotePolicies in the indexer for a given namespace.
func (s promotePolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PromotePolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PromotePolicy))
	})
	return ret, err
}

// Get retrieves the PromotePolicy from the indexer for a given namespace and name.
func (s promotePolicyNamespaceLister) Get(name string) (*v1alpha1.PromotePolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("promotepolicy"), name)
	}
	return obj.(*v1alpha1.PromotePolicy), nil
}
