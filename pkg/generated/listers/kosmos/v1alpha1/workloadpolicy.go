// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kosmos.io/kosmos/pkg/apis/kosmos/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WorkloadPolicyLister helps list WorkloadPolicies.
// All objects returned here must be treated as read-only.
type WorkloadPolicyLister interface {
	// List lists all WorkloadPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.WorkloadPolicy, err error)
	// WorkloadPolicies returns an object that can list and get WorkloadPolicies.
	WorkloadPolicies(namespace string) WorkloadPolicyNamespaceLister
	WorkloadPolicyListerExpansion
}

// workloadPolicyLister implements the WorkloadPolicyLister interface.
type workloadPolicyLister struct {
	indexer cache.Indexer
}

// NewWorkloadPolicyLister returns a new WorkloadPolicyLister.
func NewWorkloadPolicyLister(indexer cache.Indexer) WorkloadPolicyLister {
	return &workloadPolicyLister{indexer: indexer}
}

// List lists all WorkloadPolicies in the indexer.
func (s *workloadPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.WorkloadPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkloadPolicy))
	})
	return ret, err
}

// WorkloadPolicies returns an object that can list and get WorkloadPolicies.
func (s *workloadPolicyLister) WorkloadPolicies(namespace string) WorkloadPolicyNamespaceLister {
	return workloadPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WorkloadPolicyNamespaceLister helps list and get WorkloadPolicies.
// All objects returned here must be treated as read-only.
type WorkloadPolicyNamespaceLister interface {
	// List lists all WorkloadPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.WorkloadPolicy, err error)
	// Get retrieves the WorkloadPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.WorkloadPolicy, error)
	WorkloadPolicyNamespaceListerExpansion
}

// workloadPolicyNamespaceLister implements the WorkloadPolicyNamespaceLister
// interface.
type workloadPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WorkloadPolicies in the indexer for a given namespace.
func (s workloadPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WorkloadPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkloadPolicy))
	})
	return ret, err
}

// Get retrieves the WorkloadPolicy from the indexer for a given namespace and name.
func (s workloadPolicyNamespaceLister) Get(name string) (*v1alpha1.WorkloadPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("workloadpolicy"), name)
	}
	return obj.(*v1alpha1.WorkloadPolicy), nil
}
