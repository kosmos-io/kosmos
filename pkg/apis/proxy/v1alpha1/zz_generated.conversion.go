//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kosmos Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	proxy "github.com/kosmos.io/kosmos/pkg/apis/proxy"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Proxying)(nil), (*proxy.Proxying)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Proxying_To_proxy_Proxying(a.(*Proxying), b.(*proxy.Proxying), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*proxy.Proxying)(nil), (*Proxying)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_proxy_Proxying_To_v1alpha1_Proxying(a.(*proxy.Proxying), b.(*Proxying), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Proxying_To_proxy_Proxying(in *Proxying, out *proxy.Proxying, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_Proxying_To_proxy_Proxying is an autogenerated conversion function.
func Convert_v1alpha1_Proxying_To_proxy_Proxying(in *Proxying, out *proxy.Proxying, s conversion.Scope) error {
	return autoConvert_v1alpha1_Proxying_To_proxy_Proxying(in, out, s)
}

func autoConvert_proxy_Proxying_To_v1alpha1_Proxying(in *proxy.Proxying, out *Proxying, s conversion.Scope) error {
	return nil
}

// Convert_proxy_Proxying_To_v1alpha1_Proxying is an autogenerated conversion function.
func Convert_proxy_Proxying_To_v1alpha1_Proxying(in *proxy.Proxying, out *Proxying, s conversion.Scope) error {
	return autoConvert_proxy_Proxying_To_v1alpha1_Proxying(in, out, s)
}
