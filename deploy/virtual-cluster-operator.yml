---
apiVersion: v1
kind: Namespace
metadata:
  name: kosmos-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: virtual-cluster-operator
  namespace: kosmos-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: virtual-cluster-operator
rules:
  - apiGroups: ['*']
    resources: ['*']
    verbs: ["*"]
  - nonResourceURLs: ['*']
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: virtual-cluster-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: virtual-cluster-operator
subjects:
  - kind: ServiceAccount
    name: virtual-cluster-operator
    namespace: kosmos-system
---
apiVersion: v1
kind: Secret
metadata:
  name: virtual-cluster-operator
  namespace: kosmos-system
type: Opaque
data:
  # kubeconfig from outside cluster
  kubeconfig: __kubeconfig__

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: virtual-cluster-operator
  namespace: kosmos-system
data:
  # Generate by script hack/k8s-in-k8s/generate_env.sh
  env.sh: |
    __env.sh__
  # Copy from hack/k8s-in-k8s/kubelet_node_helper.sh
  kubelet_node_helper.sh: |
    __kubelet_node_helper__
  #  Obtain through the command "kubectl get cm kubelet-config -nkube-system -oyaml", change dns address to `__DNS_ADDRESS__`
  config.yaml: |
    __config.yaml__
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtual-cluster-operator
  namespace: kosmos-system
  labels:
    app: virtual-cluster-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: virtual-cluster-operator
  template:
    metadata:
      labels:
        app: virtual-cluster-operator
    spec:
      # Enter the name of the node where the virtual cluster operator is deployed
      nodeName: nodeName
      serviceAccountName: virtual-cluster-operator
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - virtual-cluster-operator
                topologyKey: kubernetes.io/hostname
      containers:
      - name: virtual-cluster-operator
        # Change a valid image address
        image: ghcr.io/kosmos-io/virtual-cluster-operator:__VERSION__
        imagePullPolicy: IfNotPresent
        env:
          - name: IMAGE_REPOSITIRY
            value: ghcr.io/kosmos-io
          - name: IMAGE_VERSION
            value: v1.25.7
          - name: COREDNS_IMAGE_TAG
            value: v1.9.3
            # Enter the ip address of a master node
          - name: EXECTOR_HOST_MASTER_NODE_IP
            value: 192.168.0.1
            # env.sh  KUBELET_CONFIG_NAME
          - name: KUBELET_CONFIG_NAME
            value: config.yaml
            # env.sh  KUBELET_KUBE_CONFIG_NAME
          - name: KUBELET_KUBE_CONFIG_NAME
            value: kubelet.conf
            # WEB_USER and WEB_PASS for generate token that can be used to access the node-agent
          - name: WEB_USER
            valueFrom:
              secretKeyRef:
                name: node-agent-secret
                key: username
          - name: WEB_PASS
            valueFrom:
              secretKeyRef:
                name: node-agent-secret
                key: password
          - name: EXECTOR_SHELL_NAME
            value: kubelet_node_helper.sh
        volumeMounts:
        - name: credentials
          mountPath: /etc/virtual-cluster-operator
          readOnly: true
        - name: shellscript
          mountPath: /etc/vc-node-dir/env.sh
          subPath: env.sh
        - name: shellscript
          mountPath: /etc/vc-node-dir/kubelet_node_helper.sh
          subPath: kubelet_node_helper.sh
        - name: shellscript
          mountPath: /etc/vc-node-dir/config.yaml
          subPath: config.yaml
        - mountPath: /kosmos/manifest
          name: components-manifest
        command:
        - virtual-cluster-operator
        - --kubeconfig=/etc/virtual-cluster-operator/kubeconfig
        - --v=4
      volumes:
      - name: credentials
        secret:
          secretName: virtual-cluster-operator
      - name: shellscript
        configMap:
          name: virtual-cluster-operator
      - hostPath:
          path: /home/vc-operator/manifest
          type: DirectoryOrCreate
        name: components-manifest
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-agent
  namespace: kosmos-system
spec:
  selector:
    matchLabels:
      app: node-agent-service
  template:
    metadata:
      labels:
        app: node-agent-service
    spec:
      hostPID: true # access host pid
      hostIPC: true # access host ipc
      hostNetwork: true # access host network
      tolerations:
        - operator: Exists # run on all nodes
      initContainers:
        - name: init-agent
          image: cis-hub-huabei-3.cmecloud.cn/node-agent/node-agent:latest
          securityContext:
            privileged: true
          env:
            - name: WEB_USER
              valueFrom:
                secretKeyRef:
                  name: node-agent-secret
                  key: username
            - name: WEB_PASS
              valueFrom:
                secretKeyRef:
                  name: node-agent-secret
                  key: password
          command: ["/bin/bash"]
          args:
            - "/app/init.sh"
          volumeMounts:
            - mountPath: /host-path
              name: node-agent
              readOnly: false
            - mountPath: /host-systemd
              name: systemd-path
              readOnly: false
      containers:
        - name: install-agent
          image: cis-hub-huabei-3.cmecloud.cn/node-agent/node-agent:latest
          securityContext:
            privileged: true # container privileged
          command:
            - nsenter
            - --target
            - "1"
            - --mount
            - --uts
            - --ipc
            - --net
            - --pid
            - --
            - bash
            - -l
            - -c
            - "/srv/node-agent/start.sh && sleep infinity"
      volumes:
        - name: node-agent
          hostPath:
            path: /srv/node-agent
            type: DirectoryOrCreate
        - name: systemd-path
          hostPath:
            path: /etc/systemd/system
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Secret
metadata:
  name: node-agent-secret
  namespace: kosmos-system
type: kubernetes.io/basic-auth
data:
  username: {{ .USERNAME }}
  password: {{ .PASSWORD }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kosmos-hostports
  namespace: kosmos-system
data:
  config.yaml: |
    # ports allocate for virtual cluster api server,from 33001, increment by 1 for each virtual cluster.Be careful not to use ports that are already in use
    portsPool:
      - 33001
      - 33002
      - 33003
      - 33004
      - 33005
      - 33006
      - 33007
      - 33008
      - 33009
      - 33010
---
apiVersion: v1
data:
  egress_selector_configuration.yaml: |
    apiVersion: apiserver.k8s.io/v1beta1
    kind: EgressSelectorConfiguration
    egressSelections:
      - name: cluster
        connection:
          proxyProtocol: GRPC
          transport:
            uds:
              udsName: /etc/kubernetes/konnectivity-server/konnectivity-server.socket
      - name: master
        connection:
          proxyProtocol: Direct
      - name: etcd
        connection:
          proxyProtocol: Direct
kind: ConfigMap
metadata:
  name: kas-proxy-files
  namespace: kas-proxy
