---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.0
  creationTimestamp: null
  name: virtualclusters.kosmos.io
spec:
  group: kosmos.io
  names:
    kind: VirtualCluster
    listKind: VirtualClusterList
    plural: virtualclusters
    shortNames:
    - vc
    singular: virtualcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .status.updateTime
      name: UPDATE-TIME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification for the behaviour of the VirtualCluster.
            properties:
              externalIP:
                description: ExternalIP is the external ip of the virtual kubernetes's
                  control plane
                type: string
              externalIps:
                description: ExternalIps is the external ips of the virtual kubernetes's
                  control plane
                items:
                  type: string
                type: array
              kubeInKubeConfig:
                description: KubeInKubeConfig is the external config of virtual cluster
                properties:
                  admissionPlugins:
                    type: boolean
                  anpMode:
                    type: string
                  apiServerReplicas:
                    type: integer
                  clusterCIDR:
                    type: string
                  etcdStorageClass:
                    type: string
                  etcdUnitSize:
                    type: string
                  forceDestroy:
                    description: todo Group according to the parameters of apiserver,
                      etcd, coredns, etc. ForceDestroy indicates whether to force
                      destroy the cluster.
                    type: boolean
                  tenantEntrypoint:
                    description: TenantEntrypoint TenantEntrypoint `yaml:"tenantEntrypoint"
                      json:"tenantEntrypoint,omitempty"`
                    properties:
                      externalIps:
                        description: ExternalIP is the external ip of the tenant entrypoint.
                        items:
                          type: string
                        type: array
                      externalVips:
                        description: ExternalVips is the external vips of the tenant
                          entrypoint.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              kubeconfig:
                description: Kubeconfig is the kubeconfig of the virtual kubernetes's
                  control plane
                type: string
              pluginOptions:
                description: datasource for plugin yaml
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
              pluginSet:
                description: PluginSet  is the list of plugins that will be used by
                  the virtual kubernetes's control plane If plugins is nil or empty,
                  all default plugins will be used
                properties:
                  disabled:
                    description: Disabled specifies default plugins that should be
                      disabled.
                    items:
                      description: Plugin specifies a plugin name
                      properties:
                        name:
                          description: Name defines the name of plugin
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  enabled:
                    description: Enabled specifies plugins that should be enabled
                      .
                    items:
                      description: Plugin specifies a plugin name
                      properties:
                        name:
                          description: Name defines the name of plugin
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              promotePolicies:
                description: PromotePolicies definites the policies for promote to
                  the kubernetes's control plane
                items:
                  properties:
                    labelSelector:
                      description: LabelSelector is used to select nodes that are
                        eligible for promotion to the kubernetes's control plane.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    nodeCount:
                      description: NodeCount is the number of nodes to promote to
                        the kubernetes's control plane
                      format: int32
                      type: integer
                  required:
                  - nodeCount
                  type: object
                type: array
              promoteResources:
                description: PromoteResources definites the resources for promote
                  to the kubernetes's control plane, the resources can be nodes or
                  just cpu,memory or gpu resources
                properties:
                  nodeInfos:
                    description: NodeInfos is the info of nodes to promote to the
                      kubernetes's control plane
                    items:
                      properties:
                        nodeName:
                          description: NodeName defines node name
                          type: string
                      type: object
                    type: array
                  resources:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: Resources is the resources to promote to the kubernetes's
                      control plane
                    type: object
                type: object
            type: object
          status:
            description: Status describes the current status of a VirtualCluster.
            properties:
              phase:
                description: Phase is the phase of kosmos-operator handling the VirtualCluster
                type: string
              port:
                format: int32
                type: integer
              portMap:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
              reason:
                type: string
              updateTime:
                format: date-time
                type: string
              vipMap:
                additionalProperties:
                  type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
